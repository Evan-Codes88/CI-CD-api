name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install
      - name: Debug Jest setup
        run: |
          npx jest --version
          npm ls jest
      - name: Run tests and generate JSON output
        run: npx jest --ci --json > test-results.json || echo "Tests failed, but continuing to process results"
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
      - name: Debug test results
        run: |
          ls -la
          cat test-results.json || echo "Failed to read test-results.json"
      - name: Create custom test log and export data
        run: |
          node -e "
            const fs = require('fs');
            let log = ['Test Summary - ' + new Date().toISOString()];
            let summary = { timestamp: new Date().toISOString(), tests: {} };
            try {
              const results = JSON.parse(fs.readFileSync('test-results.json', 'utf8'));
              log.push(
                'Total Tests: ' + (results.numTotalTests || 'N/A'),
                'Passed: ' + (results.numPassedTests || 'N/A'),
                'Failed: ' + (results.numFailedTests || 'N/A'),
                'Pending: ' + (results.numPendingTests || 'N/A'),
                results.testResults?.map((suite, i) => (
                  'Suite ' + (i + 1) + ': ' + (suite.testFilePath || 'Unknown') + '\n' +
                  (suite.testResults?.map(test => (
                    '- ' + (test.title || 'Unknown') + ': ' + (test.status || 'Unknown') +
                    (test.status === 'failed' ? '\n  Error: ' + (test.failureMessages?.join('\n  ') || 'No error message') : '')
                  )).join('\n') || 'No test results')
                )).join('\n\n') || 'No test suites'
              );
              summary.tests = {
                total: results.numTotalTests || 0,
                passed: results.numPassedTests || 0,
                failed: results.numFailedTests || 0,
                pending: results.numPendingTests || 0
              };
            } catch (e) {
              log.push('Error parsing test-results.json: ' + e.message);
              summary.error = e.message;
            }
            fs.writeFileSync('test-results-custom.log', log.join('\n'));
            fs.writeFileSync('test-summary.json', JSON.stringify(summary, null, 2));
          "
      - name: Debug AWS setup
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws --version
          aws s3 ls s3://elasticbeanstalk-ap-southeast-2-591408364730/ --region ap-southeast-2 || echo "Failed to list S3 bucket"
      - name: Upload test log to S3
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp test-results-custom.log s3://elasticbeanstalk-ap-southeast-2-591408364730/test-logs/test-results-${{ github.sha }}.log --region ap-southeast-2 || echo "Failed to upload to S3"
      - name: Upload test log to Elastic Beanstalk logs
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp test-results-custom.log s3://elasticbeanstalk-ap-southeast-2-591408364730/DEV-API/DEVAPI-env/logs/test-results-${{ github.sha }}.log --region ap-southeast-2 || echo "Failed to upload to Elastic Beanstalk logs"
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            test-results.json
            test-results-custom.log
            test-summary.json
